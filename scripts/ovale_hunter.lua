local OVALE, Ovale = ...
local OvaleScripts = Ovale.OvaleScripts

-- THE REST OF THIS FILE IS AUTOMATICALLY GENERATED.
-- ANY CHANGES MADE BELOW THIS POINT WILL BE LOST.

do
	local name = "simulationcraft_hunter_bm_legion"
	local desc = "[7.0] SimulationCraft: Hunter_BM_Legion"
	local code = [[
# Based on SimulationCraft profile "Hunter_BM_Legion".
#	class=hunter
#	spec=beast_mastery
#	talents=2132221

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_hunter_spells)

AddFunction BeastMasterySummonPet
{
	if pet.IsDead()
	{
		if not DebuffPresent(heart_of_the_phoenix_debuff) Spell(heart_of_the_phoenix)
		Spell(revive_pet)
	}
	if not pet.Present() and not pet.IsDead() and not PreviousSpell(revive_pet) Texture(ability_hunter_beastcall help=L(summon_pet))
}

### actions.default

AddFunction BeastMasteryDefaultMainActions
{
	#auto_shot
	#aspect_of_the_wild
	Spell(aspect_of_the_wild)
	#stampede
	Spell(stampede)
	#titans_thunder,if=buff.dire_beast.remains>6
	if BuffRemaining(dire_beast_buff) > 6 Spell(titans_thunder)
	#bestial_wrath
	Spell(bestial_wrath)
	#kill_command
	if pet.Present() and not pet.IsIncapacitated() and not pet.IsFeared() and not pet.IsStunned() Spell(kill_command)
	#chimaera_shot
	Spell(chimaera_shot)
	#dire_beast
	Spell(dire_beast)
	#dire_frenzy
	Spell(dire_frenzy)
	#barrage
	Spell(barrage)
	#cobra_shot,if=focus>90
	if Focus() > 90 Spell(cobra_shot)
}

### actions.precombat

AddFunction BeastMasteryPrecombatShortCdActions
{
	#summon_pet
	BeastMasterySummonPet()
}

### BeastMastery icons.

AddCheckBox(opt_hunter_beast_mastery_aoe L(AOE) default specialization=beast_mastery)

AddIcon checkbox=!opt_hunter_beast_mastery_aoe enemies=1 help=shortcd specialization=beast_mastery
{
	if not InCombat() BeastMasteryPrecombatShortCdActions()
}

AddIcon checkbox=opt_hunter_beast_mastery_aoe help=shortcd specialization=beast_mastery
{
	if not InCombat() BeastMasteryPrecombatShortCdActions()
}

AddIcon enemies=1 help=main specialization=beast_mastery
{
	BeastMasteryDefaultMainActions()
}

AddIcon checkbox=opt_hunter_beast_mastery_aoe help=aoe specialization=beast_mastery
{
	BeastMasteryDefaultMainActions()
}

### Required symbols
# aspect_of_the_wild
# barrage
# bestial_wrath
# chimaera_shot
# cobra_shot
# dire_beast
# dire_beast_buff
# dire_frenzy
# kill_command
# revive_pet
# stampede
# titans_thunder
]]
	OvaleScripts:RegisterScript("HUNTER", "beast_mastery", name, desc, code, "script")
end

do
	local name = "simulationcraft_hunter_mm_legion"
	local desc = "[7.0] SimulationCraft: Hunter_MM_Legion"
	local code = [[
# Based on SimulationCraft profile "Hunter_MM_Legion".
#	class=hunter
#	spec=marksmanship
#	talents=1113321

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_hunter_spells)

AddFunction MarksmanshipSummonPet
{
	if not Talent(lone_wolf_talent)
	{
		if pet.IsDead()
		{
			if not DebuffPresent(heart_of_the_phoenix_debuff) Spell(heart_of_the_phoenix)
			Spell(revive_pet)
		}
		if not pet.Present() and not pet.IsDead() and not PreviousSpell(revive_pet) Texture(ability_hunter_beastcall help=L(summon_pet))
	}
}

### actions.default

AddFunction MarksmanshipDefaultMainActions
{
	#auto_shot
	#trueshot,if=!artifact.bullseye.enabled|target.time_to_die>cooldown.trueshot.duration+15|target.time_to_die<18|buff.bullseye.stack>15
	if not PlayerBuffPresent(bullseye) or target.TimeToDie() > SpellCooldownDuration(trueshot) + 15 or target.TimeToDie() < 18 or BuffStacks(bullseye_buff) > 15 Spell(trueshot)
	#a_murder_of_crows
	Spell(a_murder_of_crows)
	#barrage
	Spell(barrage)
	#piercing_shot
	Spell(piercing_shot)
	#explosive_shot
	Spell(explosive_shot)
	#black_arrow
	Spell(black_arrow)
	#windburst
	Spell(windburst)
	#marked_shot,if=!talent.patient_sniper.enabled|debuff.vulnerability.remains<2
	if not Talent(patient_sniper_talent) or target.DebuffRemaining(vulnerability_debuff) < 2 Spell(marked_shot)
	#aimed_shot,if=cast_time<debuff.vulnerability.remains&(focus+cast_regen>80|!debuff.hunters_mark.up)
	if CastTime(aimed_shot) < target.DebuffRemaining(vulnerability_debuff) and { Focus() + FocusCastingRegen(aimed_shot) > 80 or not target.DebuffPresent(hunters_mark_debuff) } Spell(aimed_shot)
	#multishot,if=spell_targets.multishot>1
	if Enemies() > 1 Spell(multishot)
	#arcane_shot
	Spell(arcane_shot)
	#sidewinders,if=!debuff.hunters_mark.up&(buff.marking_targets.up|buff.trueshot.up|charges=2)
	if not target.DebuffPresent(hunters_mark_debuff) and { BuffPresent(marking_targets_buff) or BuffPresent(trueshot_buff) or Charges(sidewinders) == 2 } Spell(sidewinders)
	#aimed_shot,if=focus+cast_regen>80
	if Focus() + FocusCastingRegen(aimed_shot) > 80 Spell(aimed_shot)
}

### actions.precombat

AddFunction MarksmanshipPrecombatMainActions
{
	#volley
	Spell(volley)
}

AddFunction MarksmanshipPrecombatShortCdActions
{
	#summon_pet
	MarksmanshipSummonPet()
}

### Marksmanship icons.

AddCheckBox(opt_hunter_marksmanship_aoe L(AOE) default specialization=marksmanship)

AddIcon checkbox=!opt_hunter_marksmanship_aoe enemies=1 help=shortcd specialization=marksmanship
{
	if not InCombat() MarksmanshipPrecombatShortCdActions()
}

AddIcon checkbox=opt_hunter_marksmanship_aoe help=shortcd specialization=marksmanship
{
	if not InCombat() MarksmanshipPrecombatShortCdActions()
}

AddIcon enemies=1 help=main specialization=marksmanship
{
	if not InCombat() MarksmanshipPrecombatMainActions()
	MarksmanshipDefaultMainActions()
}

AddIcon checkbox=opt_hunter_marksmanship_aoe help=aoe specialization=marksmanship
{
	if not InCombat() MarksmanshipPrecombatMainActions()
	MarksmanshipDefaultMainActions()
}

### Required symbols
# a_murder_of_crows
# aimed_shot
# arcane_shot
# barrage
# black_arrow
# bullseye
# bullseye_buff
# explosive_shot
# hunters_mark_debuff
# lone_wolf_talent
# marked_shot
# marking_targets_buff
# multishot
# patient_sniper_talent
# piercing_shot
# revive_pet
# sidewinders
# trueshot
# trueshot_buff
# volley
# vulnerability_debuff
# windburst
]]
	OvaleScripts:RegisterScript("HUNTER", "marksmanship", name, desc, code, "script")
end

do
	local name = "simulationcraft_hunter_sv_legion"
	local desc = "[7.0] SimulationCraft: Hunter_SV_Legion"
	local code = [[
# Based on SimulationCraft profile "Hunter_SV_Legion".
#	class=hunter
#	spec=survival
#	talents=3203022

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_hunter_spells)

AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=survival)
AddCheckBox(opt_trap_launcher SpellName(trap_launcher) default specialization=survival)

AddFunction SurvivalSummonPet
{
	if not Talent(lone_wolf_talent)
	{
		if pet.IsDead()
		{
			if not DebuffPresent(heart_of_the_phoenix_debuff) Spell(heart_of_the_phoenix)
			Spell(revive_pet)
		}
		if not pet.Present() and not pet.IsDead() and not PreviousSpell(revive_pet) Texture(ability_hunter_beastcall help=L(summon_pet))
	}
}

### actions.default

AddFunction SurvivalDefaultMainActions
{
	#aspect_of_the_eagle
	Spell(aspect_of_the_eagle)
	#spitting_cobra
	Spell(spitting_cobra)
	#raptor_strike,if=buff.moknathal_tactics.remains<2
	if BuffRemaining(moknathal_tactics_buff) < 2 Spell(raptor_strike)
	#dragonsfire_grenade
	Spell(dragonsfire_grenade)
	#mongoose_bite,if=charges=3|(cooldown.fury_of_the_eagle.remains<5&buff.mongoose_fury.up)
	if Charges(mongoose_bite) == 3 or SpellCooldown(fury_of_the_eagle) < 5 and BuffPresent(mongoose_fury_buff) Spell(mongoose_bite)
	#call_action_list,name=moknathal,if=talent.way_of_the_moknathal.enabled
	if Talent(way_of_the_moknathal_talent) SurvivalMoknathalMainActions()
	#explosive_trap
	if CheckBoxOn(opt_trap_launcher) and not Glyph(glyph_of_explosive_trap) Spell(explosive_trap)
	#lacerate
	Spell(lacerate)
	#flanking_strike
	Spell(flanking_strike)
	#fury_of_the_eagle,if=buff.mongoose_fury.stack>=3
	if BuffStacks(mongoose_fury_buff) >= 3 Spell(fury_of_the_eagle)
	#raptor_strike,if=buff.moknathal_tactics.remains<2
	if BuffRemaining(moknathal_tactics_buff) < 2 Spell(raptor_strike)
	#a_murder_of_crows
	Spell(a_murder_of_crows)
	#snake_hunter,if=action.mongoose_bite.charges=0
	if Charges(mongoose_bite) == 0 Spell(snake_hunter)
	#mongoose_bite,if=(charges=3|buff.mongoose_fury.up)
	if Charges(mongoose_bite) == 3 or BuffPresent(mongoose_fury_buff) Spell(mongoose_bite)
	#throwing_axes
	Spell(throwing_axes)
	#flanking_strike,if=focus>90
	if Focus() > 90 Spell(flanking_strike)
}

### actions.moknathal

AddFunction SurvivalMoknathalMainActions
{
	#mongoose_bite,if=(charges=3|buff.mongoose_fury.up)
	if Charges(mongoose_bite) == 3 or BuffPresent(mongoose_fury_buff) Spell(mongoose_bite)
	#explosive_trap
	if CheckBoxOn(opt_trap_launcher) and not Glyph(glyph_of_explosive_trap) Spell(explosive_trap)
	#lacerate
	Spell(lacerate)
	#flanking_strike,if=focus>=90
	if Focus() >= 90 Spell(flanking_strike)
}

### actions.precombat

AddFunction SurvivalPrecombatShortCdActions
{
	#summon_pet
	SurvivalSummonPet()
}

### Survival icons.

AddCheckBox(opt_hunter_survival_aoe L(AOE) default specialization=survival)

AddIcon checkbox=!opt_hunter_survival_aoe enemies=1 help=shortcd specialization=survival
{
	if not InCombat() SurvivalPrecombatShortCdActions()
}

AddIcon checkbox=opt_hunter_survival_aoe help=shortcd specialization=survival
{
	if not InCombat() SurvivalPrecombatShortCdActions()
}

AddIcon enemies=1 help=main specialization=survival
{
	SurvivalDefaultMainActions()
}

AddIcon checkbox=opt_hunter_survival_aoe help=aoe specialization=survival
{
	SurvivalDefaultMainActions()
}

### Required symbols
# a_murder_of_crows
# aspect_of_the_eagle
# dragonsfire_grenade
# explosive_trap
# flanking_strike
# fury_of_the_eagle
# glyph_of_explosive_trap
# lacerate
# lone_wolf_talent
# moknathal_tactics_buff
# mongoose_bite
# mongoose_fury_buff
# raptor_strike
# revive_pet
# snake_hunter
# spitting_cobra
# throwing_axes
# trap_launcher
# way_of_the_moknathal_talent
]]
	OvaleScripts:RegisterScript("HUNTER", "survival", name, desc, code, "script")
end
