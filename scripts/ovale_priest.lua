local OVALE, Ovale = ...
local OvaleScripts = Ovale.OvaleScripts

-- THE REST OF THIS FILE IS AUTOMATICALLY GENERATED.
-- ANY CHANGES MADE BELOW THIS POINT WILL BE LOST.

do
	local name = "simulationcraft_priest_shadow_t18m"
	local desc = "[7.0] SimulationCraft: Priest_Shadow_T18M"
	local code = [[
# Based on SimulationCraft profile "Priest_Shadow_T18M".
#	class=priest
#	spec=shadow
#	talents=1213231

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_priest_spells)

AddCheckBox(opt_potion_intellect ItemName(draenic_intellect_potion) default specialization=shadow)
AddCheckBox(opt_legendary_ring_intellect ItemName(legendary_ring_intellect) default specialization=shadow)

AddFunction ShadowUsePotionIntellect
{
	if CheckBoxOn(opt_potion_intellect) and target.Classification(worldboss) Item(draenic_intellect_potion usable=1)
}

### actions.default

AddFunction ShadowDefaultMainActions
{
	#variable,op=set,name=actors_fight_time_mod,value=0
	#variable,op=set,name=actors_fight_time_mod,value=-((-(450)+(time+target.time_to_die))%10),if=time+target.time_to_die>450&time+target.time_to_die<600
	#variable,op=set,name=actors_fight_time_mod,value=((450-(time+target.time_to_die))%5),if=time+target.time_to_die<=450
	#variable,op=set,name=s2mcheck,value=0.85*(45+((raw_haste_pct*100)*(2+(1*talent.reaper_of_souls.enabled)+(2*artifact.mass_hysteria.rank)-(1*talent.sanlayn.enabled))))-(variable.actors_fight_time_mod*nonexecute_actors_pct)
	#variable,op=min,name=s2mcheck,value=180
	#call_action_list,name=s2m,if=buff.voidform.up&buff.surrender_to_madness.up
	if BuffPresent(voidform_buff) and BuffPresent(surrender_to_madness_buff) ShadowS2mMainActions()
	#call_action_list,name=vf,if=buff.voidform.up
	if BuffPresent(voidform_buff) ShadowVfMainActions()
	#call_action_list,name=main
	ShadowMainMainActions()
}

AddFunction ShadowDefaultShortCdActions
{
	#variable,op=set,name=actors_fight_time_mod,value=0
	#variable,op=set,name=actors_fight_time_mod,value=-((-(450)+(time+target.time_to_die))%10),if=time+target.time_to_die>450&time+target.time_to_die<600
	#variable,op=set,name=actors_fight_time_mod,value=((450-(time+target.time_to_die))%5),if=time+target.time_to_die<=450
	#variable,op=set,name=s2mcheck,value=0.85*(45+((raw_haste_pct*100)*(2+(1*talent.reaper_of_souls.enabled)+(2*artifact.mass_hysteria.rank)-(1*talent.sanlayn.enabled))))-(variable.actors_fight_time_mod*nonexecute_actors_pct)
	#variable,op=min,name=s2mcheck,value=180
	#call_action_list,name=s2m,if=buff.voidform.up&buff.surrender_to_madness.up
	if BuffPresent(voidform_buff) and BuffPresent(surrender_to_madness_buff) ShadowS2mShortCdActions()

	unless BuffPresent(voidform_buff) and BuffPresent(surrender_to_madness_buff) and ShadowS2mShortCdPostConditions()
	{
		#call_action_list,name=vf,if=buff.voidform.up
		if BuffPresent(voidform_buff) ShadowVfShortCdActions()

		unless BuffPresent(voidform_buff) and ShadowVfShortCdPostConditions()
		{
			#call_action_list,name=main
			ShadowMainShortCdActions()
		}
	}
}

AddFunction ShadowDefaultCdActions
{
	#use_item,slot=finger1
	if CheckBoxOn(opt_legendary_ring_intellect) Item(legendary_ring_intellect usable=1)
	#potion,name=draenic_intellect,if=buff.bloodlust.react|target.time_to_die<=40
	if BuffPresent(burst_haste_buff any=1) or target.TimeToDie() <= 40 ShadowUsePotionIntellect()
	#variable,op=set,name=actors_fight_time_mod,value=0
	#variable,op=set,name=actors_fight_time_mod,value=-((-(450)+(time+target.time_to_die))%10),if=time+target.time_to_die>450&time+target.time_to_die<600
	#variable,op=set,name=actors_fight_time_mod,value=((450-(time+target.time_to_die))%5),if=time+target.time_to_die<=450
	#variable,op=set,name=s2mcheck,value=0.85*(45+((raw_haste_pct*100)*(2+(1*talent.reaper_of_souls.enabled)+(2*artifact.mass_hysteria.rank)-(1*talent.sanlayn.enabled))))-(variable.actors_fight_time_mod*nonexecute_actors_pct)
	#variable,op=min,name=s2mcheck,value=180
	#call_action_list,name=s2m,if=buff.voidform.up&buff.surrender_to_madness.up
	if BuffPresent(voidform_buff) and BuffPresent(surrender_to_madness_buff) ShadowS2mCdActions()

	unless BuffPresent(voidform_buff) and BuffPresent(surrender_to_madness_buff) and ShadowS2mCdPostConditions()
	{
		#call_action_list,name=vf,if=buff.voidform.up
		if BuffPresent(voidform_buff) ShadowVfCdActions()

		unless BuffPresent(voidform_buff) and ShadowVfCdPostConditions()
		{
			#call_action_list,name=main
			ShadowMainCdActions()
		}
	}
}

### actions.main

AddFunction ShadowMainMainActions
{
	#shadow_word_pain,if=dot.shadow_word_pain.remains<(3+(4%3))*gcd
	if target.DebuffRemaining(shadow_word_pain_debuff) < { 3 + 4 / 3 } * GCD() Spell(shadow_word_pain)
	#vampiric_touch,if=dot.vampiric_touch.remains<(4+(4%3))*gcd
	if target.DebuffRemaining(vampiric_touch_debuff) < { 4 + 4 / 3 } * GCD() Spell(vampiric_touch)
	#shadow_word_pain,if=!ticking&talent.legacy_of_the_void.enabled&insanity>=70,cycle_targets=1
	if not target.DebuffPresent(shadow_word_pain_debuff) and Talent(legacy_of_the_void_talent) and Insanity() >= 70 Spell(shadow_word_pain)
	#vampiric_touch,if=!ticking&talent.legacy_of_the_void.enabled&insanity>=70,cycle_targets=1
	if not target.DebuffPresent(vampiric_touch_debuff) and Talent(legacy_of_the_void_talent) and Insanity() >= 70 Spell(vampiric_touch)
	#shadow_word_death,if=!talent.reaper_of_souls.enabled&cooldown.shadow_word_death.charges=2&insanity<=90
	if not Talent(reaper_of_souls_talent) and SpellChargeCooldown(shadow_word_death) == 2 and Insanity() <= 90 Spell(shadow_word_death)
	#shadow_word_death,if=talent.reaper_of_souls.enabled&cooldown.shadow_word_death.charges=2&insanity<=70
	if Talent(reaper_of_souls_talent) and SpellChargeCooldown(shadow_word_death) == 2 and Insanity() <= 70 Spell(shadow_word_death)
	#mind_blast,if=talent.legacy_of_the_void.enabled&(insanity<=81|(insanity<=75.2&talent.fortress_of_the_mind.enabled))
	if Talent(legacy_of_the_void_talent) and { Insanity() <= 81 or Insanity() <= 75.2 and Talent(fortress_of_the_mind_talent) } Spell(mind_blast)
	#mind_blast,if=!talent.legacy_of_the_void.enabled|(insanity<=96|(insanity<=95.2&talent.fortress_of_the_mind.enabled))
	if not Talent(legacy_of_the_void_talent) or Insanity() <= 96 or Insanity() <= 95.2 and Talent(fortress_of_the_mind_talent) Spell(mind_blast)
	#shadow_word_pain,if=!ticking&target.time_to_die>10&(active_enemies<5&(talent.auspicious_spirits.enabled|talent.shadowy_insight.enabled)),cycle_targets=1
	if not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } Spell(shadow_word_pain)
	#vampiric_touch,if=!ticking&target.time_to_die>10&(active_enemies<4|talent.sanlayn.enabled|(talent.auspicious_spirits.enabled&artifact.unleash_the_shadows.rank)),cycle_targets=1
	if not target.DebuffPresent(vampiric_touch_debuff) and target.TimeToDie() > 10 and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } Spell(vampiric_touch)
	#shadow_word_pain,if=!ticking&target.time_to_die>10&(active_enemies<5&artifact.sphere_of_insanity.rank),cycle_targets=1
	if not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and 0 Spell(shadow_word_pain)
	#mind_sear,if=active_enemies>=3,interrupt=1,chain=1
	if Enemies() >= 3 Spell(mind_sear)
	#mind_flay,if=!talent.mind_spike.enabled,interrupt=1,chain=1
	if not Talent(mind_spike_talent) Spell(mind_flay)
	#mind_spike,if=talent.mind_spike.enabled
	if Talent(mind_spike_talent) Spell(mind_spike)
	#shadow_word_pain
	Spell(shadow_word_pain)
}

AddFunction ShadowMainShortCdActions
{
	#mindbender,if=talent.mindbender.enabled&!talent.surrender_to_madness.enabled
	if Talent(mindbender_talent) and not Talent(surrender_to_madness_talent) Spell(mindbender)
	#mindbender,if=talent.mindbender.enabled&talent.surrender_to_madness.enabled&target.time_to_die>variable.s2mcheck+60
	if Talent(mindbender_talent) and Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 + 60 Spell(mindbender)

	unless target.DebuffRemaining(shadow_word_pain_debuff) < { 3 + 4 / 3 } * GCD() and Spell(shadow_word_pain) or target.DebuffRemaining(vampiric_touch_debuff) < { 4 + 4 / 3 } * GCD() and Spell(vampiric_touch)
	{
		#shadow_crash,if=talent.shadow_crash.enabled
		if Talent(shadow_crash_talent) Spell(shadow_crash)
		#mindbender,if=talent.mindbender.enabled&set_bonus.tier18_2pc
		if Talent(mindbender_talent) and ArmorSetBonus(T18 2) Spell(mindbender)

		unless not target.DebuffPresent(shadow_word_pain_debuff) and Talent(legacy_of_the_void_talent) and Insanity() >= 70 and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and Talent(legacy_of_the_void_talent) and Insanity() >= 70 and Spell(vampiric_touch) or not Talent(reaper_of_souls_talent) and SpellChargeCooldown(shadow_word_death) == 2 and Insanity() <= 90 and Spell(shadow_word_death) or Talent(reaper_of_souls_talent) and SpellChargeCooldown(shadow_word_death) == 2 and Insanity() <= 70 and Spell(shadow_word_death) or Talent(legacy_of_the_void_talent) and { Insanity() <= 81 or Insanity() <= 75.2 and Talent(fortress_of_the_mind_talent) } and Spell(mind_blast) or { not Talent(legacy_of_the_void_talent) or Insanity() <= 96 or Insanity() <= 95.2 and Talent(fortress_of_the_mind_talent) } and Spell(mind_blast) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and target.TimeToDie() > 10 and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and Spell(vampiric_touch) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and 0 and Spell(shadow_word_pain)
		{
			#shadow_word_void,if=(insanity<=70&talent.legacy_of_the_void.enabled)|(insanity<=85&!talent.legacy_of_the_void.enabled)
			if Insanity() <= 70 and Talent(legacy_of_the_void_talent) or Insanity() <= 85 and not Talent(legacy_of_the_void_talent) Spell(shadow_word_void)
		}
	}
}

AddFunction ShadowMainCdActions
{
	#surrender_to_madness,if=talent.surrender_to_madness.enabled&target.time_to_die<=variable.s2mcheck
	if Talent(surrender_to_madness_talent) and target.TimeToDie() <= 0 Spell(surrender_to_madness)

	unless Talent(mindbender_talent) and not Talent(surrender_to_madness_talent) and Spell(mindbender) or Talent(mindbender_talent) and Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 + 60 and Spell(mindbender) or target.DebuffRemaining(shadow_word_pain_debuff) < { 3 + 4 / 3 } * GCD() and Spell(shadow_word_pain) or target.DebuffRemaining(vampiric_touch_debuff) < { 4 + 4 / 3 } * GCD() and Spell(vampiric_touch)
	{
		#void_eruption,if=insanity>=85|(talent.auspicious_spirits.enabled&insanity>=(80-shadowy_apparitions_in_flight*4))
		if Insanity() >= 85 or Talent(auspicious_spirits_talent) and Insanity() >= 80 - 1 * 4 Spell(void_eruption)
	}
}

### actions.precombat

AddFunction ShadowPrecombatMainActions
{
	#mind_blast
	Spell(mind_blast)
}

AddFunction ShadowPrecombatShortCdPostConditions
{
	Spell(mind_blast)
}

AddFunction ShadowPrecombatCdActions
{
	#flask,type=greater_draenic_intellect_flask
	#food,type=buttered_sturgeon
	#snapshot_stats
	#potion,name=draenic_intellect
	ShadowUsePotionIntellect()
}

AddFunction ShadowPrecombatCdPostConditions
{
	Spell(mind_blast)
}

### actions.s2m

AddFunction ShadowS2mMainActions
{
	#void_bolt,if=dot.shadow_word_pain.remains<3.5*gcd&dot.vampiric_touch.remains<3.5*gcd&target.time_to_die>10,cycle_targets=1
	if target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 Spell(void_bolt)
	#void_bolt,if=dot.shadow_word_pain.remains<3.5*gcd&(talent.auspicious_spirits.enabled|talent.shadowy_insight.enabled)&target.time_to_die>10,cycle_targets=1
	if target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 Spell(void_bolt)
	#void_bolt,if=dot.vampiric_touch.remains<3.5*gcd&(talent.sanlayn.enabled|(talent.auspicious_spirits.enabled&artifact.unleash_the_shadows.rank))&target.time_to_die>10,cycle_targets=1
	if target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 Spell(void_bolt)
	#void_bolt,if=dot.shadow_word_pain.remains<3.5*gcd&artifact.sphere_of_insanity.rank&target.time_to_die>10,cycle_targets=1
	if target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 Spell(void_bolt)
	#void_bolt
	Spell(void_bolt)
	#shadow_word_death,if=!talent.reaper_of_souls.enabled&current_insanity_drain*gcd.max>insanity&(insanity-(current_insanity_drain*gcd.max)+30)<100
	if not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 Spell(shadow_word_death)
	#shadow_word_death,if=talent.reaper_of_souls.enabled&current_insanity_drain*gcd.max>insanity&(insanity-(current_insanity_drain*gcd.max)+90)<100
	if Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 90 < 100 Spell(shadow_word_death)
	#wait,sec=action.void_bolt.usable_in,if=action.void_bolt.usable_in<gcd.max*0.25
	unless Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0
	{
		#mind_blast
		Spell(mind_blast)
		#wait,sec=action.mind_blast.usable_in,if=action.mind_blast.usable_in<gcd.max*0.25
		unless Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0
		{
			#shadow_word_death,if=cooldown.shadow_word_death.charges=2
			if SpellChargeCooldown(shadow_word_death) == 2 Spell(shadow_word_death)
			#shadow_word_pain,if=!ticking&(active_enemies<5|talent.auspicious_spirits.enabled|talent.shadowy_insight.enabled|artifact.sphere_of_insanity.rank)
			if not target.DebuffPresent(shadow_word_pain_debuff) and { Enemies() < 5 or Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) or 0 } Spell(shadow_word_pain)
			#vampiric_touch,if=!ticking&(active_enemies<4|talent.sanlayn.enabled|(talent.auspicious_spirits.enabled&artifact.unleash_the_shadows.rank))
			if not target.DebuffPresent(vampiric_touch_debuff) and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } Spell(vampiric_touch)
			#shadow_word_pain,if=!ticking&target.time_to_die>10&(active_enemies<5&(talent.auspicious_spirits.enabled|talent.shadowy_insight.enabled)),cycle_targets=1
			if not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } Spell(shadow_word_pain)
			#vampiric_touch,if=!ticking&target.time_to_die>10&(active_enemies<4|talent.sanlayn.enabled|(talent.auspicious_spirits.enabled&artifact.unleash_the_shadows.rank)),cycle_targets=1
			if not target.DebuffPresent(vampiric_touch_debuff) and target.TimeToDie() > 10 and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } Spell(vampiric_touch)
			#shadow_word_pain,if=!ticking&target.time_to_die>10&(active_enemies<5&artifact.sphere_of_insanity.rank),cycle_targets=1
			if not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and 0 Spell(shadow_word_pain)
			#wait,sec=action.void_bolt.usable_in,if=action.void_bolt.usable|action.void_bolt.usable_in<gcd.max*0.8
			unless { Spell(void_bolt) or Spell(void_bolt) < GCD() * 0.8 } and Spell(void_bolt) > 0
			{
				#mind_sear,if=active_enemies>=3,interrupt=1
				if Enemies() >= 3 Spell(mind_sear)
				#mind_flay,if=!talent.mind_spike.enabled,chain=1,interrupt_immediate=1,interrupt_if=action.void_bolt.usable_in<gcd.max*0.8
				if not Talent(mind_spike_talent) Spell(mind_flay)
				#mind_spike,if=talent.mind_spike.enabled
				if Talent(mind_spike_talent) Spell(mind_spike)
			}
		}
	}
}

AddFunction ShadowS2mShortCdActions
{
	#shadow_crash,if=talent.shadow_crash.enabled
	if Talent(shadow_crash_talent) Spell(shadow_crash)
	#mindbender,if=talent.mindbender.enabled
	if Talent(mindbender_talent) Spell(mindbender)

	unless target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 and Spell(void_bolt) or Spell(void_bolt)
	{
		#void_torrent
		Spell(void_torrent)

		unless not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 and Spell(shadow_word_death) or Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 90 < 100 and Spell(shadow_word_death)
		{
			#wait,sec=action.void_bolt.usable_in,if=action.void_bolt.usable_in<gcd.max*0.25
			unless Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0
			{
				unless Spell(mind_blast)
				{
					#wait,sec=action.mind_blast.usable_in,if=action.mind_blast.usable_in<gcd.max*0.25
					unless Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0
					{
						unless SpellChargeCooldown(shadow_word_death) == 2 and Spell(shadow_word_death)
						{
							#shadow_word_void,if=(insanity-(current_insanity_drain*gcd.max)+75)<100
							if Insanity() - CurrentInsanityDrain() * GCD() + 75 < 100 Spell(shadow_word_void)
						}
					}
				}
			}
		}
	}
}

AddFunction ShadowS2mShortCdPostConditions
{
	target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 and Spell(void_bolt) or Spell(void_bolt) or not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 and Spell(shadow_word_death) or Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 90 < 100 and Spell(shadow_word_death) or not { Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0 } and { Spell(mind_blast) or not { Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0 } and { SpellChargeCooldown(shadow_word_death) == 2 and Spell(shadow_word_death) or not target.DebuffPresent(shadow_word_pain_debuff) and { Enemies() < 5 or Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) or 0 } and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and Spell(vampiric_touch) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and target.TimeToDie() > 10 and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and Spell(vampiric_touch) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and 0 and Spell(shadow_word_pain) or not { { Spell(void_bolt) or Spell(void_bolt) < GCD() * 0.8 } and Spell(void_bolt) > 0 } and { Enemies() >= 3 and Spell(mind_sear) or not Talent(mind_spike_talent) and Spell(mind_flay) or Talent(mind_spike_talent) and Spell(mind_spike) } } }
}

AddFunction ShadowS2mCdActions
{
	unless Talent(shadow_crash_talent) and Spell(shadow_crash) or Talent(mindbender_talent) and Spell(mindbender)
	{
		#dispersion,if=!buff.power_infusion.up&!buff.berserking.up&!buff.bloodlust.up
		if not BuffPresent(power_infusion_buff) and not BuffPresent(berserking_buff) and not BuffPresent(burst_haste_buff any=1) Spell(dispersion)
		#power_infusion,if=buff.insanity_drain_stacks.stack>=85
		if BuffStacks(insanity_drain_stacks_buff) >= 85 Spell(power_infusion)
		#berserking,if=buff.voidform.stack>=90
		if BuffStacks(voidform_buff) >= 90 Spell(berserking)

		unless target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 and Spell(void_bolt) or Spell(void_bolt) or Spell(void_torrent) or not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 and Spell(shadow_word_death) or Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 90 < 100 and Spell(shadow_word_death)
		{
			#wait,sec=action.void_bolt.usable_in,if=action.void_bolt.usable_in<gcd.max*0.25
			unless Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0
			{
				unless Spell(mind_blast)
				{
					#wait,sec=action.mind_blast.usable_in,if=action.mind_blast.usable_in<gcd.max*0.25
					unless Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0
					{
						unless SpellChargeCooldown(shadow_word_death) == 2 and Spell(shadow_word_death)
						{
							#shadowfiend,if=!talent.mindbender.enabled,if=buff.voidform.stack>15
							if BuffStacks(voidform_buff) > 15 Spell(shadowfiend)
						}
					}
				}
			}
		}
	}
}

AddFunction ShadowS2mCdPostConditions
{
	Talent(shadow_crash_talent) and Spell(shadow_crash) or Talent(mindbender_talent) and Spell(mindbender) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 and Spell(void_bolt) or Spell(void_bolt) or Spell(void_torrent) or not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 and Spell(shadow_word_death) or Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 90 < 100 and Spell(shadow_word_death) or not { Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0 } and { Spell(mind_blast) or not { Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0 } and { SpellChargeCooldown(shadow_word_death) == 2 and Spell(shadow_word_death) or Insanity() - CurrentInsanityDrain() * GCD() + 75 < 100 and Spell(shadow_word_void) or not target.DebuffPresent(shadow_word_pain_debuff) and { Enemies() < 5 or Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) or 0 } and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and Spell(vampiric_touch) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and target.TimeToDie() > 10 and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and Spell(vampiric_touch) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and 0 and Spell(shadow_word_pain) or not { { Spell(void_bolt) or Spell(void_bolt) < GCD() * 0.8 } and Spell(void_bolt) > 0 } and { Enemies() >= 3 and Spell(mind_sear) or not Talent(mind_spike_talent) and Spell(mind_flay) or Talent(mind_spike_talent) and Spell(mind_spike) } } }
}

### actions.vf

AddFunction ShadowVfMainActions
{
	#void_bolt,if=dot.shadow_word_pain.remains<3.5*gcd&dot.vampiric_touch.remains<3.5*gcd&target.time_to_die>10,cycle_targets=1
	if target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 Spell(void_bolt)
	#void_bolt,if=dot.shadow_word_pain.remains<3.5*gcd&(talent.auspicious_spirits.enabled|talent.shadowy_insight.enabled)&target.time_to_die>10,cycle_targets=1
	if target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 Spell(void_bolt)
	#void_bolt,if=dot.vampiric_touch.remains<3.5*gcd&(talent.sanlayn.enabled|(talent.auspicious_spirits.enabled&artifact.unleash_the_shadows.rank))&target.time_to_die>10,cycle_targets=1
	if target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 Spell(void_bolt)
	#void_bolt,if=dot.shadow_word_pain.remains<3.5*gcd&artifact.sphere_of_insanity.rank&target.time_to_die>10,cycle_targets=1
	if target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 Spell(void_bolt)
	#void_bolt
	Spell(void_bolt)
	#shadow_word_death,if=!talent.reaper_of_souls.enabled&current_insanity_drain*gcd.max>insanity&(insanity-(current_insanity_drain*gcd.max)+10)<100
	if not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 10 < 100 Spell(shadow_word_death)
	#shadow_word_death,if=talent.reaper_of_souls.enabled&current_insanity_drain*gcd.max>insanity&(insanity-(current_insanity_drain*gcd.max)+30)<100
	if Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 Spell(shadow_word_death)
	#wait,sec=action.void_bolt.usable_in,if=action.void_bolt.usable_in<gcd.max*0.25
	unless Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0
	{
		#mind_blast
		Spell(mind_blast)
		#wait,sec=action.mind_blast.usable_in,if=action.mind_blast.usable_in<gcd.max*0.25
		unless Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0
		{
			#shadow_word_death,if=cooldown.shadow_word_death.charges=2
			if SpellChargeCooldown(shadow_word_death) == 2 Spell(shadow_word_death)
			#shadow_word_pain,if=!ticking&(active_enemies<5|talent.auspicious_spirits.enabled|talent.shadowy_insight.enabled|artifact.sphere_of_insanity.rank)
			if not target.DebuffPresent(shadow_word_pain_debuff) and { Enemies() < 5 or Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) or 0 } Spell(shadow_word_pain)
			#vampiric_touch,if=!ticking&(active_enemies<4|talent.sanlayn.enabled|(talent.auspicious_spirits.enabled&artifact.unleash_the_shadows.rank))
			if not target.DebuffPresent(vampiric_touch_debuff) and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } Spell(vampiric_touch)
			#shadow_word_pain,if=!ticking&target.time_to_die>10&(active_enemies<5&(talent.auspicious_spirits.enabled|talent.shadowy_insight.enabled)),cycle_targets=1
			if not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } Spell(shadow_word_pain)
			#vampiric_touch,if=!ticking&target.time_to_die>10&(active_enemies<4|talent.sanlayn.enabled|(talent.auspicious_spirits.enabled&artifact.unleash_the_shadows.rank)),cycle_targets=1
			if not target.DebuffPresent(vampiric_touch_debuff) and target.TimeToDie() > 10 and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } Spell(vampiric_touch)
			#shadow_word_pain,if=!ticking&target.time_to_die>10&(active_enemies<5&artifact.sphere_of_insanity.rank),cycle_targets=1
			if not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and 0 Spell(shadow_word_pain)
			#wait,sec=action.void_bolt.usable_in,if=action.void_bolt.usable|action.void_bolt.usable_in<gcd.max*0.8
			unless { Spell(void_bolt) or Spell(void_bolt) < GCD() * 0.8 } and Spell(void_bolt) > 0
			{
				#mind_sear,if=active_enemies>=3,interrupt=1
				if Enemies() >= 3 Spell(mind_sear)
				#mind_flay,if=!talent.mind_spike.enabled,chain=1,interrupt_immediate=1,interrupt_if=action.void_bolt.usable_in<gcd.max*0.8
				if not Talent(mind_spike_talent) Spell(mind_flay)
				#mind_spike,if=talent.mind_spike.enabled
				if Talent(mind_spike_talent) Spell(mind_spike)
				#shadow_word_pain
				Spell(shadow_word_pain)
			}
		}
	}
}

AddFunction ShadowVfShortCdActions
{
	#shadow_crash,if=talent.shadow_crash.enabled
	if Talent(shadow_crash_talent) Spell(shadow_crash)
	#mindbender,if=talent.mindbender.enabled&!talent.surrender_to_madness.enabled
	if Talent(mindbender_talent) and not Talent(surrender_to_madness_talent) Spell(mindbender)
	#mindbender,if=talent.mindbender.enabled&talent.surrender_to_madness.enabled&target.time_to_die>variable.s2mcheck-(buff.insanity_drain_stacks.stack)+30
	if Talent(mindbender_talent) and Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 - BuffStacks(insanity_drain_stacks_buff) + 30 Spell(mindbender)

	unless target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 and Spell(void_bolt) or Spell(void_bolt)
	{
		#void_torrent,if=!talent.surrender_to_madness.enabled
		if not Talent(surrender_to_madness_talent) Spell(void_torrent)
		#void_torrent,if=talent.surrender_to_madness.enabled&target.time_to_die>variable.s2mcheck-(buff.insanity_drain_stacks.stack)+60
		if Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 - BuffStacks(insanity_drain_stacks_buff) + 60 Spell(void_torrent)

		unless not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 10 < 100 and Spell(shadow_word_death) or Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 and Spell(shadow_word_death)
		{
			#wait,sec=action.void_bolt.usable_in,if=action.void_bolt.usable_in<gcd.max*0.25
			unless Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0
			{
				unless Spell(mind_blast)
				{
					#wait,sec=action.mind_blast.usable_in,if=action.mind_blast.usable_in<gcd.max*0.25
					unless Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0
					{
						unless SpellChargeCooldown(shadow_word_death) == 2 and Spell(shadow_word_death)
						{
							#shadow_word_void,if=(insanity-(current_insanity_drain*gcd.max)+25)<100
							if Insanity() - CurrentInsanityDrain() * GCD() + 25 < 100 Spell(shadow_word_void)
						}
					}
				}
			}
		}
	}
}

AddFunction ShadowVfShortCdPostConditions
{
	target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 and Spell(void_bolt) or Spell(void_bolt) or not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 10 < 100 and Spell(shadow_word_death) or Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 and Spell(shadow_word_death) or not { Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0 } and { Spell(mind_blast) or not { Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0 } and { SpellChargeCooldown(shadow_word_death) == 2 and Spell(shadow_word_death) or not target.DebuffPresent(shadow_word_pain_debuff) and { Enemies() < 5 or Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) or 0 } and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and Spell(vampiric_touch) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and target.TimeToDie() > 10 and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and Spell(vampiric_touch) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and 0 and Spell(shadow_word_pain) or not { { Spell(void_bolt) or Spell(void_bolt) < GCD() * 0.8 } and Spell(void_bolt) > 0 } and { Enemies() >= 3 and Spell(mind_sear) or not Talent(mind_spike_talent) and Spell(mind_flay) or Talent(mind_spike_talent) and Spell(mind_spike) or Spell(shadow_word_pain) } } }
}

AddFunction ShadowVfCdActions
{
	#surrender_to_madness,if=talent.surrender_to_madness.enabled&insanity>=25&(cooldown.void_bolt.up|cooldown.void_torrent.up|cooldown.shadow_word_death.up|buff.shadowy_insight.up)&target.time_to_die<=variable.s2mcheck-(buff.insanity_drain_stacks.stack)
	if Talent(surrender_to_madness_talent) and Insanity() >= 25 and { not SpellCooldown(void_bolt) > 0 or not SpellCooldown(void_torrent) > 0 or not SpellCooldown(shadow_word_death) > 0 or BuffPresent(shadowy_insight_buff) } and target.TimeToDie() <= 0 - BuffStacks(insanity_drain_stacks_buff) Spell(surrender_to_madness)

	unless Talent(shadow_crash_talent) and Spell(shadow_crash) or Talent(mindbender_talent) and not Talent(surrender_to_madness_talent) and Spell(mindbender) or Talent(mindbender_talent) and Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 - BuffStacks(insanity_drain_stacks_buff) + 30 and Spell(mindbender)
	{
		#dispersion,if=!buff.power_infusion.up&!buff.berserking.up&!buff.bloodlust.up&artifact.void_torrent.rank&!talent.surrender_to_madness.enabled
		if not BuffPresent(power_infusion_buff) and not BuffPresent(berserking_buff) and not BuffPresent(burst_haste_buff any=1) and 0 and not Talent(surrender_to_madness_talent) Spell(dispersion)
		#dispersion,if=!buff.power_infusion.up&!buff.berserking.up&!buff.bloodlust.up&artifact.void_torrent.rank&talent.surrender_to_madness.enabled&target.time_to_die>variable.s2mcheck-(buff.insanity_drain_stacks.stack)+(120-10*artifact.from_the_shadows.rank)
		if not BuffPresent(power_infusion_buff) and not BuffPresent(berserking_buff) and not BuffPresent(burst_haste_buff any=1) and 0 and Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 - BuffStacks(insanity_drain_stacks_buff) + { 120 - 10 * 0 } Spell(dispersion)
		#power_infusion,if=buff.voidform.stack>=10&buff.insanity_drain_stacks.stack<=30&!talent.surrender_to_madness.enabled
		if BuffStacks(voidform_buff) >= 10 and BuffStacks(insanity_drain_stacks_buff) <= 30 and not Talent(surrender_to_madness_talent) Spell(power_infusion)
		#power_infusion,if=buff.voidform.stack>=10&talent.surrender_to_madness.enabled&target.time_to_die>variable.s2mcheck-(buff.insanity_drain_stacks.stack)+15
		if BuffStacks(voidform_buff) >= 10 and Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 - BuffStacks(insanity_drain_stacks_buff) + 15 Spell(power_infusion)
		#berserking,if=buff.voidform.stack>=10&buff.insanity_drain_stacks.stack<=20&!talent.surrender_to_madness.enabled
		if BuffStacks(voidform_buff) >= 10 and BuffStacks(insanity_drain_stacks_buff) <= 20 and not Talent(surrender_to_madness_talent) Spell(berserking)
		#berserking,if=buff.voidform.stack>=10&talent.surrender_to_madness.enabled&target.time_to_die>variable.s2mcheck-(buff.insanity_drain_stacks.stack)+70
		if BuffStacks(voidform_buff) >= 10 and Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 - BuffStacks(insanity_drain_stacks_buff) + 70 Spell(berserking)

		unless target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 and Spell(void_bolt) or Spell(void_bolt) or not Talent(surrender_to_madness_talent) and Spell(void_torrent) or Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 - BuffStacks(insanity_drain_stacks_buff) + 60 and Spell(void_torrent) or not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 10 < 100 and Spell(shadow_word_death) or Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 and Spell(shadow_word_death)
		{
			#wait,sec=action.void_bolt.usable_in,if=action.void_bolt.usable_in<gcd.max*0.25
			unless Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0
			{
				unless Spell(mind_blast)
				{
					#wait,sec=action.mind_blast.usable_in,if=action.mind_blast.usable_in<gcd.max*0.25
					unless Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0
					{
						unless SpellChargeCooldown(shadow_word_death) == 2 and Spell(shadow_word_death)
						{
							#shadowfiend,if=!talent.mindbender.enabled,if=buff.voidform.stack>15
							if BuffStacks(voidform_buff) > 15 Spell(shadowfiend)
						}
					}
				}
			}
		}
	}
}

AddFunction ShadowVfCdPostConditions
{
	Talent(shadow_crash_talent) and Spell(shadow_crash) or Talent(mindbender_talent) and not Talent(surrender_to_madness_talent) and Spell(mindbender) or Talent(mindbender_talent) and Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 - BuffStacks(insanity_drain_stacks_buff) + 30 and Spell(mindbender) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(vampiric_touch_debuff) < 3.5 * GCD() and { Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and target.TimeToDie() > 10 and Spell(void_bolt) or target.DebuffRemaining(shadow_word_pain_debuff) < 3.5 * GCD() and 0 and target.TimeToDie() > 10 and Spell(void_bolt) or Spell(void_bolt) or not Talent(surrender_to_madness_talent) and Spell(void_torrent) or Talent(surrender_to_madness_talent) and target.TimeToDie() > 0 - BuffStacks(insanity_drain_stacks_buff) + 60 and Spell(void_torrent) or not Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 10 < 100 and Spell(shadow_word_death) or Talent(reaper_of_souls_talent) and CurrentInsanityDrain() * GCD() > Insanity() and Insanity() - CurrentInsanityDrain() * GCD() + 30 < 100 and Spell(shadow_word_death) or not { Spell(void_bolt) < GCD() * 0.25 and Spell(void_bolt) > 0 } and { Spell(mind_blast) or not { Spell(mind_blast) < GCD() * 0.25 and Spell(mind_blast) > 0 } and { SpellChargeCooldown(shadow_word_death) == 2 and Spell(shadow_word_death) or Insanity() - CurrentInsanityDrain() * GCD() + 25 < 100 and Spell(shadow_word_void) or not target.DebuffPresent(shadow_word_pain_debuff) and { Enemies() < 5 or Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) or 0 } and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and Spell(vampiric_touch) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and { Talent(auspicious_spirits_talent) or Talent(shadowy_insight_talent) } and Spell(shadow_word_pain) or not target.DebuffPresent(vampiric_touch_debuff) and target.TimeToDie() > 10 and { Enemies() < 4 or Talent(sanlayn_talent) or Talent(auspicious_spirits_talent) and 0 } and Spell(vampiric_touch) or not target.DebuffPresent(shadow_word_pain_debuff) and target.TimeToDie() > 10 and Enemies() < 5 and 0 and Spell(shadow_word_pain) or not { { Spell(void_bolt) or Spell(void_bolt) < GCD() * 0.8 } and Spell(void_bolt) > 0 } and { Enemies() >= 3 and Spell(mind_sear) or not Talent(mind_spike_talent) and Spell(mind_flay) or Talent(mind_spike_talent) and Spell(mind_spike) or Spell(shadow_word_pain) } } }
}

### Shadow icons.

AddCheckBox(opt_priest_shadow_aoe L(AOE) default specialization=shadow)

AddIcon checkbox=!opt_priest_shadow_aoe enemies=1 help=shortcd specialization=shadow
{
	unless not InCombat() and ShadowPrecombatShortCdPostConditions()
	{
		ShadowDefaultShortCdActions()
	}
}

AddIcon checkbox=opt_priest_shadow_aoe help=shortcd specialization=shadow
{
	unless not InCombat() and ShadowPrecombatShortCdPostConditions()
	{
		ShadowDefaultShortCdActions()
	}
}

AddIcon enemies=1 help=main specialization=shadow
{
	if not InCombat() ShadowPrecombatMainActions()
	ShadowDefaultMainActions()
}

AddIcon checkbox=opt_priest_shadow_aoe help=aoe specialization=shadow
{
	if not InCombat() ShadowPrecombatMainActions()
	ShadowDefaultMainActions()
}

AddIcon checkbox=!opt_priest_shadow_aoe enemies=1 help=cd specialization=shadow
{
	if not InCombat() ShadowPrecombatCdActions()
	unless not InCombat() and ShadowPrecombatCdPostConditions()
	{
		ShadowDefaultCdActions()
	}
}

AddIcon checkbox=opt_priest_shadow_aoe help=cd specialization=shadow
{
	if not InCombat() ShadowPrecombatCdActions()
	unless not InCombat() and ShadowPrecombatCdPostConditions()
	{
		ShadowDefaultCdActions()
	}
}

### Required symbols
# auspicious_spirits_talent
# berserking
# berserking_buff
# dispersion
# draenic_intellect_potion
# fortress_of_the_mind_talent
# from_the_shadows
# insanity_drain_stacks_buff
# legacy_of_the_void_talent
# legendary_ring_intellect
# mind_blast
# mind_flay
# mind_sear
# mind_spike
# mind_spike_talent
# mindbender
# mindbender_talent
# power_infusion
# power_infusion_buff
# reaper_of_souls_talent
# sanlayn_talent
# shadow_crash
# shadow_crash_talent
# shadow_word_death
# shadow_word_pain
# shadow_word_pain_debuff
# shadow_word_void
# shadowfiend
# shadowy_insight_buff
# shadowy_insight_talent
# sphere_of_insanity
# surrender_to_madness
# surrender_to_madness_buff
# surrender_to_madness_talent
# unleash_the_shadows
# vampiric_touch
# vampiric_touch_debuff
# void_bolt
# void_eruption
# void_torrent
# voidform_buff
]]
	OvaleScripts:RegisterScript("PRIEST", "shadow", name, desc, code, "script")
end
