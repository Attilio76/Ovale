local OVALE, Ovale = ...
local OvaleScripts = Ovale.OvaleScripts

-- THE REST OF THIS FILE IS AUTOMATICALLY GENERATED.
-- ANY CHANGES MADE BELOW THIS POINT WILL BE LOST.

do
	local name = "simulationcraft_death_knight_frost_1h_t18m"
	local desc = "[7.0] SimulationCraft: Death_Knight_Frost_1h_T18M"
	local code = [[
# Based on SimulationCraft profile "Death_Knight_Frost_1h_T18M".
#	class=deathknight
#	spec=frost
#	talents=1130023

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_deathknight_spells)

AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=frost)
AddCheckBox(opt_potion_strength ItemName(draenic_strength_potion) default specialization=frost)
AddCheckBox(opt_legendary_ring_strength ItemName(legendary_ring_strength) default specialization=frost)

AddFunction FrostDualWieldUsePotionStrength
{
	if CheckBoxOn(opt_potion_strength) and target.Classification(worldboss) Item(draenic_strength_potion usable=1)
}

AddFunction FrostDualWieldGetInMeleeRange
{
	if CheckBoxOn(opt_melee_range) and not target.InRange(death_strike) Texture(misc_arrowlup help=L(not_in_melee_range))
}

### actions.default

AddFunction FrostDualWieldDefaultMainActions
{
	#run_action_list,name=bos,if=dot.breath_of_sindragosa.ticking
	if BuffPresent(breath_of_sindragosa_buff) FrostDualWieldBosMainActions()
	#call_action_list,name=generic
	FrostDualWieldGenericMainActions()
}

AddFunction FrostDualWieldDefaultShortCdActions
{
	#auto_attack
	FrostDualWieldGetInMeleeRange()
	#pillar_of_frost
	Spell(pillar_of_frost)
	#obliteration
	Spell(obliteration)
	#run_action_list,name=bos,if=dot.breath_of_sindragosa.ticking
	if BuffPresent(breath_of_sindragosa_buff) FrostDualWieldBosShortCdActions()

	unless BuffPresent(breath_of_sindragosa_buff) and FrostDualWieldBosShortCdPostConditions()
	{
		#call_action_list,name=generic
		FrostDualWieldGenericShortCdActions()
	}
}

AddFunction FrostDualWieldDefaultCdActions
{
	#arcane_torrent,if=runic_power.deficit>20
	if RunicPowerDeficit() > 20 Spell(arcane_torrent_runicpower)
	#blood_fury,if=!talent.breath_of_sindragosa.enabled|dot.breath_of_sindragosa.ticking
	if not Talent(breath_of_sindragosa_talent) or BuffPresent(breath_of_sindragosa_buff) Spell(blood_fury_ap)
	#berserking
	Spell(berserking)
	#use_item,slot=finger1
	if CheckBoxOn(opt_legendary_ring_strength) Item(legendary_ring_strength usable=1)
	#potion,name=draenic_strength,if=cooldown.pillar_of_frost.remains<5&cooldown.thorasus_the_stone_heart_of_draenor.remains<10
	if SpellCooldown(pillar_of_frost) < 5 and ItemCooldown(legendary_ring_strength) < 10 FrostDualWieldUsePotionStrength()
	#sindragosas_fury
	Spell(sindragosas_fury)

	unless Spell(obliteration)
	{
		#breath_of_sindragosa,if=runic_power>=80
		if RunicPower() >= 80 Spell(breath_of_sindragosa)
		#run_action_list,name=bos,if=dot.breath_of_sindragosa.ticking
		if BuffPresent(breath_of_sindragosa_buff) FrostDualWieldBosCdActions()

		unless BuffPresent(breath_of_sindragosa_buff) and FrostDualWieldBosCdPostConditions()
		{
			#call_action_list,name=generic
			FrostDualWieldGenericCdActions()
		}
	}
}

### actions.bos

AddFunction FrostDualWieldBosMainActions
{
	#call_action_list,name=core
	FrostDualWieldCoreMainActions()
	#howling_blast,target_if=!dot.frost_fever.ticking
	if not target.DebuffPresent(frost_fever_debuff) Spell(howling_blast)
	#howling_blast,if=buff.rime.react
	if BuffPresent(rime_buff) Spell(howling_blast)
}

AddFunction FrostDualWieldBosShortCdActions
{
	unless FrostDualWieldCoreShortCdPostConditions() or not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast)
	{
		#horn_of_winter
		if BuffExpires(attack_power_multiplier_buff any=1) Spell(horn_of_winter)
	}
}

AddFunction FrostDualWieldBosShortCdPostConditions
{
	FrostDualWieldCoreShortCdPostConditions() or not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffPresent(rime_buff) and Spell(howling_blast)
}

AddFunction FrostDualWieldBosCdActions
{
	unless FrostDualWieldCoreCdPostConditions() or not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffExpires(attack_power_multiplier_buff any=1) and Spell(horn_of_winter)
	{
		#empower_rune_weapon
		Spell(empower_rune_weapon)
		#hungering_rune_weapon
		Spell(hungering_rune_weapon)
	}
}

AddFunction FrostDualWieldBosCdPostConditions
{
	FrostDualWieldCoreCdPostConditions() or not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffExpires(attack_power_multiplier_buff any=1) and Spell(horn_of_winter) or BuffPresent(rime_buff) and Spell(howling_blast)
}

### actions.core

AddFunction FrostDualWieldCoreMainActions
{
	#glacial_advance
	Spell(glacial_advance)
	#frostscythe,if=buff.killing_machine.react|spell_targets.frostscythe>=4
	if BuffPresent(killing_machine_buff) or Enemies() >= 4 Spell(frostscythe)
	#obliterate,if=buff.killing_machine.react
	if BuffPresent(killing_machine_buff) Spell(obliterate)
	#remorseless_winter,if=spell_targets.remorseless_winter>=2
	if Enemies() >= 2 Spell(remorseless_winter)
	#obliterate
	Spell(obliterate)
	#frostscythe,if=talent.frozen_pulse.enabled
	if Talent(frozen_pulse_talent) Spell(frostscythe)
	#howling_blast,if=talent.frozen_pulse.enabled
	if Talent(frozen_pulse_talent) Spell(howling_blast)
}

AddFunction FrostDualWieldCoreShortCdPostConditions
{
	Spell(glacial_advance) or { BuffPresent(killing_machine_buff) or Enemies() >= 4 } and Spell(frostscythe) or BuffPresent(killing_machine_buff) and Spell(obliterate) or Enemies() >= 2 and Spell(remorseless_winter) or Spell(obliterate) or Talent(frozen_pulse_talent) and Spell(frostscythe) or Talent(frozen_pulse_talent) and Spell(howling_blast)
}

AddFunction FrostDualWieldCoreCdPostConditions
{
	Spell(glacial_advance) or { BuffPresent(killing_machine_buff) or Enemies() >= 4 } and Spell(frostscythe) or BuffPresent(killing_machine_buff) and Spell(obliterate) or Enemies() >= 2 and Spell(remorseless_winter) or Spell(obliterate) or Talent(frozen_pulse_talent) and Spell(frostscythe) or Talent(frozen_pulse_talent) and Spell(howling_blast)
}

### actions.generic

AddFunction FrostDualWieldGenericMainActions
{
	#howling_blast,target_if=!dot.frost_fever.ticking
	if not target.DebuffPresent(frost_fever_debuff) Spell(howling_blast)
	#howling_blast,if=buff.rime.react
	if BuffPresent(rime_buff) Spell(howling_blast)
	#frost_strike,if=runic_power>=80
	if RunicPower() >= 80 Spell(frost_strike)
	#call_action_list,name=core
	FrostDualWieldCoreMainActions()
	#frost_strike,if=talent.breath_of_sindragosa.enabled&cooldown.breath_of_sindragosa.remains>15
	if Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 Spell(frost_strike)
	#frost_strike,if=!talent.breath_of_sindragosa.enabled
	if not Talent(breath_of_sindragosa_talent) Spell(frost_strike)
}

AddFunction FrostDualWieldGenericShortCdActions
{
	unless not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffPresent(rime_buff) and Spell(howling_blast) or RunicPower() >= 80 and Spell(frost_strike)
	{
		unless FrostDualWieldCoreShortCdPostConditions() or Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 and Spell(frost_strike) or not Talent(breath_of_sindragosa_talent) and Spell(frost_strike)
		{
			#horn_of_winter,if=talent.breath_of_sindragosa.enabled&cooldown.breath_of_sindragosa.remains>15
			if Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 and BuffExpires(attack_power_multiplier_buff any=1) Spell(horn_of_winter)
			#horn_of_winter,if=!talent.breath_of_sindragosa.enabled
			if not Talent(breath_of_sindragosa_talent) and BuffExpires(attack_power_multiplier_buff any=1) Spell(horn_of_winter)
		}
	}
}

AddFunction FrostDualWieldGenericCdActions
{
	unless not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffPresent(rime_buff) and Spell(howling_blast) or RunicPower() >= 80 and Spell(frost_strike)
	{
		unless FrostDualWieldCoreCdPostConditions() or Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 and Spell(frost_strike) or not Talent(breath_of_sindragosa_talent) and Spell(frost_strike) or Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 and BuffExpires(attack_power_multiplier_buff any=1) and Spell(horn_of_winter)
		{
			#empower_rune_weapon,if=talent.breath_of_sindragosa.enabled&cooldown.breath_of_sindragosa.remains>15
			if Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 Spell(empower_rune_weapon)
			#hungering_rune_weapon,if=talent.breath_of_sindragosa.enabled&cooldown.breath_of_sindragosa.remains>15
			if Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 Spell(hungering_rune_weapon)

			unless not Talent(breath_of_sindragosa_talent) and BuffExpires(attack_power_multiplier_buff any=1) and Spell(horn_of_winter)
			{
				#empower_rune_weapon,if=!talent.breath_of_sindragosa.enabled
				if not Talent(breath_of_sindragosa_talent) Spell(empower_rune_weapon)
				#hungering_rune_weapon,if=!talent.breath_of_sindragosa.enabled
				if not Talent(breath_of_sindragosa_talent) Spell(hungering_rune_weapon)
			}
		}
	}
}

### actions.precombat

AddFunction FrostDualWieldPrecombatCdActions
{
	#flask,type=greater_draenic_strength_flask
	#food,type=pickled_eel
	#snapshot_stats
	#potion,name=draenic_strength
	FrostDualWieldUsePotionStrength()
}

### Frost icons.

AddCheckBox(opt_deathknight_frost_aoe L(AOE) default specialization=frost)

AddIcon checkbox=!opt_deathknight_frost_aoe enemies=1 help=shortcd specialization=frost
{
	FrostDualWieldDefaultShortCdActions()
}

AddIcon checkbox=opt_deathknight_frost_aoe help=shortcd specialization=frost
{
	FrostDualWieldDefaultShortCdActions()
}

AddIcon enemies=1 help=main specialization=frost
{
	FrostDualWieldDefaultMainActions()
}

AddIcon checkbox=opt_deathknight_frost_aoe help=aoe specialization=frost
{
	FrostDualWieldDefaultMainActions()
}

AddIcon checkbox=!opt_deathknight_frost_aoe enemies=1 help=cd specialization=frost
{
	if not InCombat() FrostDualWieldPrecombatCdActions()
	FrostDualWieldDefaultCdActions()
}

AddIcon checkbox=opt_deathknight_frost_aoe help=cd specialization=frost
{
	if not InCombat() FrostDualWieldPrecombatCdActions()
	FrostDualWieldDefaultCdActions()
}

### Required symbols
# arcane_torrent_runicpower
# berserking
# blood_fury_ap
# breath_of_sindragosa
# breath_of_sindragosa_buff
# breath_of_sindragosa_talent
# draenic_strength_potion
# empower_rune_weapon
# frost_fever_debuff
# frost_strike
# frostscythe
# frozen_pulse_talent
# glacial_advance
# horn_of_winter
# howling_blast
# hungering_rune_weapon
# killing_machine_buff
# legendary_ring_strength
# obliterate
# obliteration
# pillar_of_frost
# plague_strike
# remorseless_winter
# rime_buff
# sindragosas_fury
]]
	OvaleScripts:RegisterScript("DEATHKNIGHT", "frost", name, desc, code, "script")
end

do
	local name = "simulationcraft_death_knight_frost_2h_t18m"
	local desc = "[7.0] SimulationCraft: Death_Knight_Frost_2h_T18M"
	local code = [[
# Based on SimulationCraft profile "Death_Knight_Frost_2h_T18M".
#	class=deathknight
#	spec=frost
#	talents=1130023

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_deathknight_spells)

AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=frost)
AddCheckBox(opt_potion_strength ItemName(draenic_strength_potion) default specialization=frost)
AddCheckBox(opt_legendary_ring_strength ItemName(legendary_ring_strength) default specialization=frost)

AddFunction FrostTwoHanderUsePotionStrength
{
	if CheckBoxOn(opt_potion_strength) and target.Classification(worldboss) Item(draenic_strength_potion usable=1)
}

AddFunction FrostTwoHanderGetInMeleeRange
{
	if CheckBoxOn(opt_melee_range) and not target.InRange(death_strike) Texture(misc_arrowlup help=L(not_in_melee_range))
}

### actions.default

AddFunction FrostTwoHanderDefaultMainActions
{
	#run_action_list,name=bos,if=dot.breath_of_sindragosa.ticking
	if BuffPresent(breath_of_sindragosa_buff) FrostTwoHanderBosMainActions()
	#call_action_list,name=generic
	FrostTwoHanderGenericMainActions()
}

AddFunction FrostTwoHanderDefaultShortCdActions
{
	#auto_attack
	FrostTwoHanderGetInMeleeRange()
	#pillar_of_frost
	Spell(pillar_of_frost)
	#obliteration
	Spell(obliteration)
	#run_action_list,name=bos,if=dot.breath_of_sindragosa.ticking
	if BuffPresent(breath_of_sindragosa_buff) FrostTwoHanderBosShortCdActions()

	unless BuffPresent(breath_of_sindragosa_buff) and FrostTwoHanderBosShortCdPostConditions()
	{
		#call_action_list,name=generic
		FrostTwoHanderGenericShortCdActions()
	}
}

AddFunction FrostTwoHanderDefaultCdActions
{
	#arcane_torrent,if=runic_power.deficit>20
	if RunicPowerDeficit() > 20 Spell(arcane_torrent_runicpower)
	#blood_fury,if=!talent.breath_of_sindragosa.enabled|dot.breath_of_sindragosa.ticking
	if not Talent(breath_of_sindragosa_talent) or BuffPresent(breath_of_sindragosa_buff) Spell(blood_fury_ap)
	#berserking
	Spell(berserking)
	#use_item,slot=finger1
	if CheckBoxOn(opt_legendary_ring_strength) Item(legendary_ring_strength usable=1)
	#potion,name=draenic_strength,if=cooldown.pillar_of_frost.remains<5&cooldown.thorasus_the_stone_heart_of_draenor.remains<10
	if SpellCooldown(pillar_of_frost) < 5 and ItemCooldown(legendary_ring_strength) < 10 FrostTwoHanderUsePotionStrength()
	#sindragosas_fury
	Spell(sindragosas_fury)

	unless Spell(obliteration)
	{
		#breath_of_sindragosa,if=runic_power>=80
		if RunicPower() >= 80 Spell(breath_of_sindragosa)
		#run_action_list,name=bos,if=dot.breath_of_sindragosa.ticking
		if BuffPresent(breath_of_sindragosa_buff) FrostTwoHanderBosCdActions()

		unless BuffPresent(breath_of_sindragosa_buff) and FrostTwoHanderBosCdPostConditions()
		{
			#call_action_list,name=generic
			FrostTwoHanderGenericCdActions()
		}
	}
}

### actions.bos

AddFunction FrostTwoHanderBosMainActions
{
	#call_action_list,name=core
	FrostTwoHanderCoreMainActions()
	#howling_blast,target_if=!dot.frost_fever.ticking
	if not target.DebuffPresent(frost_fever_debuff) Spell(howling_blast)
	#howling_blast,if=buff.rime.react
	if BuffPresent(rime_buff) Spell(howling_blast)
}

AddFunction FrostTwoHanderBosShortCdActions
{
	unless FrostTwoHanderCoreShortCdPostConditions() or not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast)
	{
		#horn_of_winter
		if BuffExpires(attack_power_multiplier_buff any=1) Spell(horn_of_winter)
	}
}

AddFunction FrostTwoHanderBosShortCdPostConditions
{
	FrostTwoHanderCoreShortCdPostConditions() or not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffPresent(rime_buff) and Spell(howling_blast)
}

AddFunction FrostTwoHanderBosCdActions
{
	unless FrostTwoHanderCoreCdPostConditions() or not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffExpires(attack_power_multiplier_buff any=1) and Spell(horn_of_winter)
	{
		#empower_rune_weapon
		Spell(empower_rune_weapon)
		#hungering_rune_weapon
		Spell(hungering_rune_weapon)
	}
}

AddFunction FrostTwoHanderBosCdPostConditions
{
	FrostTwoHanderCoreCdPostConditions() or not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffExpires(attack_power_multiplier_buff any=1) and Spell(horn_of_winter) or BuffPresent(rime_buff) and Spell(howling_blast)
}

### actions.core

AddFunction FrostTwoHanderCoreMainActions
{
	#glacial_advance
	Spell(glacial_advance)
	#frostscythe,if=buff.killing_machine.react|spell_targets.frostscythe>=4
	if BuffPresent(killing_machine_buff) or Enemies() >= 4 Spell(frostscythe)
	#obliterate,if=buff.killing_machine.react
	if BuffPresent(killing_machine_buff) Spell(obliterate)
	#remorseless_winter,if=spell_targets.remorseless_winter>=2
	if Enemies() >= 2 Spell(remorseless_winter)
	#obliterate
	Spell(obliterate)
	#frostscythe,if=talent.frozen_pulse.enabled
	if Talent(frozen_pulse_talent) Spell(frostscythe)
	#howling_blast,if=talent.frozen_pulse.enabled
	if Talent(frozen_pulse_talent) Spell(howling_blast)
}

AddFunction FrostTwoHanderCoreShortCdPostConditions
{
	Spell(glacial_advance) or { BuffPresent(killing_machine_buff) or Enemies() >= 4 } and Spell(frostscythe) or BuffPresent(killing_machine_buff) and Spell(obliterate) or Enemies() >= 2 and Spell(remorseless_winter) or Spell(obliterate) or Talent(frozen_pulse_talent) and Spell(frostscythe) or Talent(frozen_pulse_talent) and Spell(howling_blast)
}

AddFunction FrostTwoHanderCoreCdPostConditions
{
	Spell(glacial_advance) or { BuffPresent(killing_machine_buff) or Enemies() >= 4 } and Spell(frostscythe) or BuffPresent(killing_machine_buff) and Spell(obliterate) or Enemies() >= 2 and Spell(remorseless_winter) or Spell(obliterate) or Talent(frozen_pulse_talent) and Spell(frostscythe) or Talent(frozen_pulse_talent) and Spell(howling_blast)
}

### actions.generic

AddFunction FrostTwoHanderGenericMainActions
{
	#howling_blast,target_if=!dot.frost_fever.ticking
	if not target.DebuffPresent(frost_fever_debuff) Spell(howling_blast)
	#howling_blast,if=buff.rime.react
	if BuffPresent(rime_buff) Spell(howling_blast)
	#frost_strike,if=runic_power>=80
	if RunicPower() >= 80 Spell(frost_strike)
	#call_action_list,name=core
	FrostTwoHanderCoreMainActions()
	#frost_strike,if=talent.breath_of_sindragosa.enabled&cooldown.breath_of_sindragosa.remains>15
	if Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 Spell(frost_strike)
	#frost_strike,if=!talent.breath_of_sindragosa.enabled
	if not Talent(breath_of_sindragosa_talent) Spell(frost_strike)
}

AddFunction FrostTwoHanderGenericShortCdActions
{
	unless not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffPresent(rime_buff) and Spell(howling_blast) or RunicPower() >= 80 and Spell(frost_strike)
	{
		unless FrostTwoHanderCoreShortCdPostConditions() or Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 and Spell(frost_strike) or not Talent(breath_of_sindragosa_talent) and Spell(frost_strike)
		{
			#horn_of_winter,if=talent.breath_of_sindragosa.enabled&cooldown.breath_of_sindragosa.remains>15
			if Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 and BuffExpires(attack_power_multiplier_buff any=1) Spell(horn_of_winter)
			#horn_of_winter,if=!talent.breath_of_sindragosa.enabled
			if not Talent(breath_of_sindragosa_talent) and BuffExpires(attack_power_multiplier_buff any=1) Spell(horn_of_winter)
		}
	}
}

AddFunction FrostTwoHanderGenericCdActions
{
	unless not target.DebuffPresent(frost_fever_debuff) and Spell(howling_blast) or BuffPresent(rime_buff) and Spell(howling_blast) or RunicPower() >= 80 and Spell(frost_strike)
	{
		unless FrostTwoHanderCoreCdPostConditions() or Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 and Spell(frost_strike) or not Talent(breath_of_sindragosa_talent) and Spell(frost_strike) or Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 and BuffExpires(attack_power_multiplier_buff any=1) and Spell(horn_of_winter)
		{
			#empower_rune_weapon,if=talent.breath_of_sindragosa.enabled&cooldown.breath_of_sindragosa.remains>15
			if Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 Spell(empower_rune_weapon)
			#hungering_rune_weapon,if=talent.breath_of_sindragosa.enabled&cooldown.breath_of_sindragosa.remains>15
			if Talent(breath_of_sindragosa_talent) and SpellCooldown(breath_of_sindragosa) > 15 Spell(hungering_rune_weapon)

			unless not Talent(breath_of_sindragosa_talent) and BuffExpires(attack_power_multiplier_buff any=1) and Spell(horn_of_winter)
			{
				#empower_rune_weapon,if=!talent.breath_of_sindragosa.enabled
				if not Talent(breath_of_sindragosa_talent) Spell(empower_rune_weapon)
				#hungering_rune_weapon,if=!talent.breath_of_sindragosa.enabled
				if not Talent(breath_of_sindragosa_talent) Spell(hungering_rune_weapon)
			}
		}
	}
}

### actions.precombat

AddFunction FrostTwoHanderPrecombatCdActions
{
	#flask,type=greater_draenic_strength_flask
	#food,type=pickled_eel
	#snapshot_stats
	#potion,name=draenic_strength
	FrostTwoHanderUsePotionStrength()
}

### Frost icons.

AddCheckBox(opt_deathknight_frost_aoe L(AOE) default specialization=frost)

AddIcon checkbox=!opt_deathknight_frost_aoe enemies=1 help=shortcd specialization=frost
{
	FrostTwoHanderDefaultShortCdActions()
}

AddIcon checkbox=opt_deathknight_frost_aoe help=shortcd specialization=frost
{
	FrostTwoHanderDefaultShortCdActions()
}

AddIcon enemies=1 help=main specialization=frost
{
	FrostTwoHanderDefaultMainActions()
}

AddIcon checkbox=opt_deathknight_frost_aoe help=aoe specialization=frost
{
	FrostTwoHanderDefaultMainActions()
}

AddIcon checkbox=!opt_deathknight_frost_aoe enemies=1 help=cd specialization=frost
{
	if not InCombat() FrostTwoHanderPrecombatCdActions()
	FrostTwoHanderDefaultCdActions()
}

AddIcon checkbox=opt_deathknight_frost_aoe help=cd specialization=frost
{
	if not InCombat() FrostTwoHanderPrecombatCdActions()
	FrostTwoHanderDefaultCdActions()
}

### Required symbols
# arcane_torrent_runicpower
# berserking
# blood_fury_ap
# breath_of_sindragosa
# breath_of_sindragosa_buff
# breath_of_sindragosa_talent
# draenic_strength_potion
# empower_rune_weapon
# frost_fever_debuff
# frost_strike
# frostscythe
# frozen_pulse_talent
# glacial_advance
# horn_of_winter
# howling_blast
# hungering_rune_weapon
# killing_machine_buff
# legendary_ring_strength
# obliterate
# obliteration
# pillar_of_frost
# plague_strike
# remorseless_winter
# rime_buff
# sindragosas_fury
]]
	OvaleScripts:RegisterScript("DEATHKNIGHT", "frost", name, desc, code, "script")
end

do
	local name = "simulationcraft_death_knight_unholy_t18m"
	local desc = "[7.0] SimulationCraft: Death_Knight_Unholy_T18M"
	local code = [[
# Based on SimulationCraft profile "Death_Knight_Unholy_T18M".
#	class=deathknight
#	spec=unholy
#	talents=3330021

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_deathknight_spells)

AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=unholy)
AddCheckBox(opt_potion_strength ItemName(draenic_strength_potion) default specialization=unholy)
AddCheckBox(opt_legendary_ring_strength ItemName(legendary_ring_strength) default specialization=unholy)

AddFunction UnholyUsePotionStrength
{
	if CheckBoxOn(opt_potion_strength) and target.Classification(worldboss) Item(draenic_strength_potion usable=1)
}

AddFunction UnholyGetInMeleeRange
{
	if CheckBoxOn(opt_melee_range) and not target.InRange(death_strike) Texture(misc_arrowlup help=L(not_in_melee_range))
}

### actions.default

AddFunction UnholyDefaultMainActions
{
	#outbreak,target_if=!dot.virulent_plague.ticking
	if not target.DebuffPresent(virulent_plague_debuff) Spell(outbreak)
	#run_action_list,name=valkyr,if=talent.dark_arbiter.enabled&pet.valkyr_battlemaiden.active
	if Talent(dark_arbiter_talent) and pet.Present() UnholyValkyrMainActions()
	#call_action_list,name=generic
	UnholyGenericMainActions()
}

AddFunction UnholyDefaultShortCdActions
{
	#auto_attack
	UnholyGetInMeleeRange()

	unless not target.DebuffPresent(virulent_plague_debuff) and Spell(outbreak)
	{
		#dark_transformation
		Spell(dark_transformation)
		#blighted_rune_weapon
		Spell(blighted_rune_weapon)
		#run_action_list,name=valkyr,if=talent.dark_arbiter.enabled&pet.valkyr_battlemaiden.active
		if Talent(dark_arbiter_talent) and pet.Present() UnholyValkyrShortCdActions()

		unless Talent(dark_arbiter_talent) and pet.Present() and UnholyValkyrShortCdPostConditions()
		{
			#call_action_list,name=generic
			UnholyGenericShortCdActions()
		}
	}
}

AddFunction UnholyDefaultCdActions
{
	#arcane_torrent,if=runic_power.deficit>20
	if RunicPowerDeficit() > 20 Spell(arcane_torrent_runicpower)
	#blood_fury
	Spell(blood_fury_ap)
	#berserking
	Spell(berserking)
	#use_item,slot=finger1
	if CheckBoxOn(opt_legendary_ring_strength) Item(legendary_ring_strength usable=1)
	#potion,name=draenic_strength,if=cooldown.summon_gargoyle.remains>165&!talent.dark_arbiter.enabled
	if SpellCooldown(summon_gargoyle) > 165 and not Talent(dark_arbiter_talent) UnholyUsePotionStrength()
	#potion,name=draenic_strength,if=cooldown.dark_arbiter.remains>165&talent.dark_arbiter.enabled
	if SpellCooldown(dark_arbiter) > 165 and Talent(dark_arbiter_talent) UnholyUsePotionStrength()

	unless not target.DebuffPresent(virulent_plague_debuff) and Spell(outbreak) or Spell(dark_transformation) or Spell(blighted_rune_weapon)
	{
		unless Talent(dark_arbiter_talent) and pet.Present() and UnholyValkyrCdPostConditions()
		{
			#call_action_list,name=generic
			UnholyGenericCdActions()
		}
	}
}

### actions.aoe

AddFunction UnholyAoeMainActions
{
	#epidemic,if=spell_targets.epidemic>4
	if Enemies() > 4 Spell(epidemic)
	#scourge_strike,if=spell_targets.scourge_strike>=2&(dot.death_and_decay.ticking|dot.defile.ticking)
	if Enemies() >= 2 and { target.DebuffPresent(death_and_decay_debuff) or target.DebuffPresent(defile_debuff) } Spell(scourge_strike)
	#clawing_shadows,if=spell_targets.clawing_shadows>=2&(dot.death_and_decay.ticking|dot.defile.ticking)
	if Enemies() >= 2 and { target.DebuffPresent(death_and_decay_debuff) or target.DebuffPresent(defile_debuff) } Spell(clawing_shadows)
	#epidemic,if=spell_targets.epidemic>2
	if Enemies() > 2 Spell(epidemic)
}

AddFunction UnholyAoeShortCdActions
{
	#death_and_decay,if=spell_targets.death_and_decay>=2
	if Enemies() >= 2 Spell(death_and_decay)
}

AddFunction UnholyAoeShortCdPostConditions
{
	Enemies() > 4 and Spell(epidemic) or Enemies() >= 2 and { target.DebuffPresent(death_and_decay_debuff) or target.DebuffPresent(defile_debuff) } and Spell(scourge_strike) or Enemies() >= 2 and { target.DebuffPresent(death_and_decay_debuff) or target.DebuffPresent(defile_debuff) } and Spell(clawing_shadows) or Enemies() > 2 and Spell(epidemic)
}

AddFunction UnholyAoeCdPostConditions
{
	Enemies() >= 2 and Spell(death_and_decay) or Enemies() > 4 and Spell(epidemic) or Enemies() >= 2 and { target.DebuffPresent(death_and_decay_debuff) or target.DebuffPresent(defile_debuff) } and Spell(scourge_strike) or Enemies() >= 2 and { target.DebuffPresent(death_and_decay_debuff) or target.DebuffPresent(defile_debuff) } and Spell(clawing_shadows) or Enemies() > 2 and Spell(epidemic)
}

### actions.generic

AddFunction UnholyGenericMainActions
{
	#death_coil,if=runic_power>80
	if RunicPower() > 80 Spell(death_coil)
	#death_coil,if=talent.dark_arbiter.enabled&buff.sudden_doom.react&cooldown.dark_arbiter.remains>5
	if Talent(dark_arbiter_talent) and BuffPresent(sudden_doom_buff) and SpellCooldown(dark_arbiter) > 5 Spell(death_coil)
	#death_coil,if=!talent.dark_arbiter.enabled&buff.sudden_doom.react
	if not Talent(dark_arbiter_talent) and BuffPresent(sudden_doom_buff) Spell(death_coil)
	#festering_strike,if=debuff.soul_reaper.up&!debuff.festering_wound.up
	if target.DebuffPresent(soul_reaper_unholy_debuff) and not target.DebuffPresent(festering_wound_debuff) Spell(festering_strike)
	#scourge_strike,if=debuff.soul_reaper.up&debuff.festering_wound.stack>=1
	if target.DebuffPresent(soul_reaper_unholy_debuff) and target.DebuffStacks(festering_wound_debuff) >= 1 Spell(scourge_strike)
	#clawing_shadows,if=debuff.soul_reaper.up&debuff.festering_wound.stack>=1
	if target.DebuffPresent(soul_reaper_unholy_debuff) and target.DebuffStacks(festering_wound_debuff) >= 1 Spell(clawing_shadows)
	#call_action_list,name=aoe,if=active_enemies>=2
	if Enemies() >= 2 UnholyAoeMainActions()
	#festering_strike,if=debuff.festering_wound.stack<=4
	if target.DebuffStacks(festering_wound_debuff) <= 4 Spell(festering_strike)
	#scourge_strike,if=buff.necrosis.react
	if BuffPresent(necrosis_buff) Spell(scourge_strike)
	#clawing_shadows,if=buff.necrosis.react
	if BuffPresent(necrosis_buff) Spell(clawing_shadows)
	#scourge_strike,if=buff.unholy_strength.react
	if BuffPresent(unholy_strength_buff) Spell(scourge_strike)
	#clawing_shadows,if=buff.unholy_strength.react
	if BuffPresent(unholy_strength_buff) Spell(clawing_shadows)
	#scourge_strike,if=rune>=3
	if Rune() >= 3 Spell(scourge_strike)
	#clawing_shadows,if=rune>=3
	if Rune() >= 3 Spell(clawing_shadows)
	#death_coil,if=talent.shadow_infusion.enabled&talent.dark_arbiter.enabled&!buff.dark_transformation.up&cooldown.dark_arbiter.remains>15
	if Talent(shadow_infusion_talent) and Talent(dark_arbiter_talent) and not pet.BuffPresent(dark_transformation_buff) and SpellCooldown(dark_arbiter) > 15 Spell(death_coil)
	#death_coil,if=talent.shadow_infusion.enabled&!talent.dark_arbiter.enabled&!buff.dark_transformation.up
	if Talent(shadow_infusion_talent) and not Talent(dark_arbiter_talent) and not pet.BuffPresent(dark_transformation_buff) Spell(death_coil)
	#death_coil,if=talent.dark_arbiter.enabled&cooldown.dark_arbiter.remains>15
	if Talent(dark_arbiter_talent) and SpellCooldown(dark_arbiter) > 15 Spell(death_coil)
	#death_coil,if=!talent.shadow_infusion.enabled&!talent.dark_arbiter.enabled
	if not Talent(shadow_infusion_talent) and not Talent(dark_arbiter_talent) Spell(death_coil)
}

AddFunction UnholyGenericShortCdActions
{
	unless RunicPower() > 80 and Spell(death_coil) or Talent(dark_arbiter_talent) and BuffPresent(sudden_doom_buff) and SpellCooldown(dark_arbiter) > 5 and Spell(death_coil) or not Talent(dark_arbiter_talent) and BuffPresent(sudden_doom_buff) and Spell(death_coil)
	{
		#soul_reaper,if=debuff.festering_wound.stack>=3
		if target.DebuffStacks(festering_wound_debuff) >= 3 Spell(soul_reaper_unholy)

		unless target.DebuffPresent(soul_reaper_unholy_debuff) and not target.DebuffPresent(festering_wound_debuff) and Spell(festering_strike) or target.DebuffPresent(soul_reaper_unholy_debuff) and target.DebuffStacks(festering_wound_debuff) >= 1 and Spell(scourge_strike) or target.DebuffPresent(soul_reaper_unholy_debuff) and target.DebuffStacks(festering_wound_debuff) >= 1 and Spell(clawing_shadows)
		{
			#defile
			Spell(defile)
			#call_action_list,name=aoe,if=active_enemies>=2
			if Enemies() >= 2 UnholyAoeShortCdActions()
		}
	}
}

AddFunction UnholyGenericCdActions
{
	#dark_arbiter,if=runic_power>80
	if RunicPower() > 80 Spell(dark_arbiter)
	#summon_gargoyle
	Spell(summon_gargoyle)
}

### actions.precombat

AddFunction UnholyPrecombatShortCdActions
{
	#raise_dead
	Spell(raise_dead)
}

AddFunction UnholyPrecombatCdActions
{
	#flask,type=greater_draenic_strength_flask
	#food,type=buttered_sturgeon
	#snapshot_stats
	#potion,name=draenic_strength
	UnholyUsePotionStrength()

	unless Spell(raise_dead)
	{
		#army_of_the_dead
		Spell(army_of_the_dead)
	}
}

AddFunction UnholyPrecombatCdPostConditions
{
	Spell(raise_dead)
}

### actions.valkyr

AddFunction UnholyValkyrMainActions
{
	#death_coil
	Spell(death_coil)
	#call_action_list,name=aoe,if=active_enemies>=2
	if Enemies() >= 2 UnholyAoeMainActions()
	#festering_strike,if=debuff.festering_wound.stack<=6
	if target.DebuffStacks(festering_wound_debuff) <= 6 Spell(festering_strike)
	#scourge_strike,if=debuff.festering_wound.up
	if target.DebuffPresent(festering_wound_debuff) Spell(scourge_strike)
	#clawing_shadows,if=debuff.festering_wound.up
	if target.DebuffPresent(festering_wound_debuff) Spell(clawing_shadows)
}

AddFunction UnholyValkyrShortCdActions
{
	unless Spell(death_coil)
	{
		#call_action_list,name=aoe,if=active_enemies>=2
		if Enemies() >= 2 UnholyAoeShortCdActions()
	}
}

AddFunction UnholyValkyrShortCdPostConditions
{
	Spell(death_coil) or Enemies() >= 2 and UnholyAoeShortCdPostConditions() or target.DebuffStacks(festering_wound_debuff) <= 6 and Spell(festering_strike) or target.DebuffPresent(festering_wound_debuff) and Spell(scourge_strike) or target.DebuffPresent(festering_wound_debuff) and Spell(clawing_shadows)
}

AddFunction UnholyValkyrCdPostConditions
{
	Spell(death_coil) or Enemies() >= 2 and UnholyAoeCdPostConditions() or target.DebuffStacks(festering_wound_debuff) <= 6 and Spell(festering_strike) or target.DebuffPresent(festering_wound_debuff) and Spell(scourge_strike) or target.DebuffPresent(festering_wound_debuff) and Spell(clawing_shadows)
}

### Unholy icons.

AddCheckBox(opt_deathknight_unholy_aoe L(AOE) default specialization=unholy)

AddIcon checkbox=!opt_deathknight_unholy_aoe enemies=1 help=shortcd specialization=unholy
{
	if not InCombat() UnholyPrecombatShortCdActions()
	UnholyDefaultShortCdActions()
}

AddIcon checkbox=opt_deathknight_unholy_aoe help=shortcd specialization=unholy
{
	if not InCombat() UnholyPrecombatShortCdActions()
	UnholyDefaultShortCdActions()
}

AddIcon enemies=1 help=main specialization=unholy
{
	UnholyDefaultMainActions()
}

AddIcon checkbox=opt_deathknight_unholy_aoe help=aoe specialization=unholy
{
	UnholyDefaultMainActions()
}

AddIcon checkbox=!opt_deathknight_unholy_aoe enemies=1 help=cd specialization=unholy
{
	if not InCombat() UnholyPrecombatCdActions()
	unless not InCombat() and UnholyPrecombatCdPostConditions()
	{
		UnholyDefaultCdActions()
	}
}

AddIcon checkbox=opt_deathknight_unholy_aoe help=cd specialization=unholy
{
	if not InCombat() UnholyPrecombatCdActions()
	unless not InCombat() and UnholyPrecombatCdPostConditions()
	{
		UnholyDefaultCdActions()
	}
}

### Required symbols
# arcane_torrent_runicpower
# army_of_the_dead
# berserking
# blighted_rune_weapon
# blood_fury_ap
# clawing_shadows
# dark_arbiter
# dark_arbiter_talent
# dark_transformation
# dark_transformation_buff
# death_and_decay
# death_and_decay_debuff
# death_coil
# defile
# defile_debuff
# draenic_strength_potion
# epidemic
# festering_strike
# festering_wound_debuff
# legendary_ring_strength
# necrosis_buff
# outbreak
# plague_strike
# raise_dead
# scourge_strike
# shadow_infusion_talent
# soul_reaper_unholy
# soul_reaper_unholy_debuff
# sudden_doom_buff
# summon_gargoyle
# unholy_strength_buff
# valkyr_battlemaiden
# virulent_plague_debuff
]]
	OvaleScripts:RegisterScript("DEATHKNIGHT", "unholy", name, desc, code, "script")
end
